1. Why does the primary Flutter app build take so long?

Answer : During the primary time flutter app development, a device-specific APK or IPA file is made . 

Consequently, XCode and Gradle are utilized in building the files, thus, taking time. Thereafter, when the app is restarted, 

flutter patches the changes on the prevailing app, leading to , a super-fast refresh.
*******************************************************************************************************************************************
2. What are the similarities and differences of Future and Stream?

Answer : Similarity:

Future and Stream both work asynchronously.

Both have some potential value.

Differences:

A Stream may be a combination of Futures.

Future has just one response but Stream could have any number of Response.
*******************************************************************************************************************************************
3. How is whenCompleted() different from then() in Future? 

Answer: whenComplete will fire a function either when the longer term completes with a mistake or not, while .then returns a replacement Future which is 
 completed with the results of the decision to onValue (if this future completes with a value) or to onError (if this future completes with an error)

.whenCompleted is that the asynchronous equivalent of a "finally" block.
*******************************************************************************************************************************************
4. What Are the varied Methods to control Strings?
Answer: There are various methods to control string that are given in table:

String Methods Description

toLowerCase():It converts all the string character into small letter .

toUpperCase():It converts all the string character into capital .

trim():It returns the string with none leading and trailing whitespace.

compareTo():It compare objects to a different objects.
*******************************************************************************************************************************************
5. Explain async, async*, yeild, yeild* and await
*******************************************************************************************************************************************
6. Explain BlocProvider, BlocConsumer, BlocListerner
Exlain Bloc pattern in brief
First of all, BlocBuilder/BlocListener should be in the scope of a corresponding BlocProvider.

You should return BlocBuilder in the build method of your Stateless/Stateful widget. If you want to combine BlocListener and 
BlocBuilder you can use BlocConsumer widget. In addition, you can add parameter 
buildWhen to specify if BlocBuilder should rebuild your widget depending on incoming state. 
Here's an example:
class __ScreenWidgetState extends State<Screen> {

  @override
  Widget build(BuildContext context) {
    return BlocConsumer<ScreenBloc, ScreenState>(
      buildWhen: (previousState, state) {
        return state is! DontBuild;
      },
      builder: (BuildContext context, state) {
        return Text(state.text);
      },
      listener: (BuildContext context, state) {
        if (state is ShowFlushbar) {
          showFlushBar(context: context, message: state.text);
        }
      },
    );
  }
}
*******************************************************************************************************************************************
7. What are the benefits of flutter?
*******************************************************************************************************************************************
8. Why are functions passed to widgets?
*******************************************************************************************************************************************
9. What Is the utilization Of This Keyword In Dart?
*******************************************************************************************************************************************
10. Explain try catch finally
*******************************************************************************************************************************************
11. How many types of widgets in flutter? Differentiate StatelessWidget and StatefulWidget?
*******************************************************************************************************************************************
12. What is Streams in Flutter/Dart?  How many types of stream?
*******************************************************************************************************************************************
13. What Is Rune In Dart?
Answer In Dart, rune is an integer representing Unicode code point.
*******************************************************************************************************************************************
14. Who is that the Developer Of Dart?
Google is that the developer of Dart.
*******************************************************************************************************************************************
15. What is different between dart and flutter?
*******************************************************************************************************************************************
16. What is isolate in dart?
*******************************************************************************************************************************************
17. Explain any 3 animation widget in flutter?
*******************************************************************************************************************************************
18. What is the meaning of mainAxisAlignment and crossAxisAlignment
*******************************************************************************************************************************************
19. What is the diffrenece between SingleChildScrollView and Listview
*******************************************************************************************************************************************
20. What is AOT and JIT in dart?
*******************************************************************************************************************************************
21. What is the different between primary and unique key
*******************************************************************************************************************************************
22. What is ignorepointer and absorbpointer in flutter and where we can use it?
*******************************************************************************************************************************************
23. What is kReleaseMode?
*******************************************************************************************************************************************
24. What is vsync?
*******************************************************************************************************************************************
25. What is different between widgettree and elementtree
*******************************************************************************************************************************************
26. What is pubspec.yaml file?
*******************************************************************************************************************************************
27. What are packages and plugins in Flutter?
*******************************************************************************************************************************************
28. Which one is better between Flutter and React Native?
*******************************************************************************************************************************************
29. Explain Hot Reload and Hot Restart in depth?
*******************************************************************************************************************************************
30. What is the latest release of Flutter SDK?
*******************************************************************************************************************************************
31. What is null safty?
*******************************************************************************************************************************************
32. Explain spread operatot ... ?
*******************************************************************************************************************************************
33 Explain ??, ?., ?, !
*******************************************************************************************************************************************
34. Explain tenory operator ? : 
*******************************************************************************************************************************************
35. What is the difference between "main()" and "runApp()" functions in Flutter?
*******************************************************************************************************************************************
36. What is the difference between SizedBox VS Container?
*******************************************************************************************************************************************
37 What are the different build modes in Flutter? and explain one by one
*******************************************************************************************************************************************
38. What is Widget Tree and Element Tree
https://youtu.be/4W8eN_6mO2E
*******************************************************************************************************************************************
40. Name of any famous 5 state management approaches
*******************************************************************************************************************************************
41. Differentiate between ephemeral state and app state
*******************************************************************************************************************************************
42. Why do we need mixins?
*******************************************************************************************************************************************
43. What is the difference between WidgetsApp and MaterialApp?
*******************************************************************************************************************************************
44. What is BuildContext?
*******************************************************************************************************************************************
45. What types of tests can you perform in Flutter?
Unit Tests: It tests a single function, method, or class. Its goal is to ensure the correctness of code under a variety of conditions. This testing is used for checking the validity of our business logic.

Widget Tests: It tests a single widget. Its goal is to ensure that the widget's UI looks and interacts with other widgets as expected.

Integration Tests: It validates a complete app or a large part of the app. Its goal is to ensure that all the widgets and services work together as expected.
*******************************************************************************************************************************************
46. What are Null-aware operators?
??= , ??
*******************************************************************************************************************************************
47. How can we make ui responsive? 
What is the difference between Expanded and Flexible widgets?
*******************************************************************************************************************************************
48. What is extension ? 
*******************************************************************************************************************************************
49. Any 5 apple policy which you have face while submission of app store
*******************************************************************************************************************************************
50. When should you use WidgetsBindingObserver? 
*******************************************************************************************************************************************
51 .How is Flutter different from a WebView based application? like crossplatform and hybrid app development
*******************************************************************************************************************************************
52. What is Fat Arrow Notation in Dart and when do you use it?
*******************************************************************************************************************************************
53. What is method channel and when we can use it?
*******************************************************************************************************************************************
54. What is a MediaQuery in Flutter and when do we use it?
*******************************************************************************************************************************************
55.  What is the difference between double.INFINITY and MediaQuery?
*******************************************************************************************************************************************
56. What is the purpose of SafeArea in Flutter?
*******************************************************************************************************************************************
57. What is  WillPopeScope and when we are using it?
*******************************************************************************************************************************************
58. What is InheritedWidget?
*******************************************************************************************************************************************
59. How are you manage web, android and ios ui?
*******************************************************************************************************************************************
60. What’s the lifecycle of a ‘StatefulWidget’?
createState() — a method in a StatefulWidget that’s called immediately and should return a State object for the widget
initState() — the first method called in the State object after the widget is created
didChangeDependencies() — called immediately after initState() the first time the widget is built
build() — very similar to the one from the StatelessWidget. It’s called right after didChangeDependencies(). It’s called every single time the UI needs to render and returns a widget’s tree.
didUpdateWidget() — it’s called when the parent widget changes and needs to redraw its UI
deactivate() — called before dispose(), when this object is removed from the tree
dispose() — called when deallocating the whole widget and its state
*******************************************************************************************************************************************
61. What is build runner?
*******************************************************************************************************************************************
62. What is the different between set and list and map
*******************************************************************************************************************************************
63. How to compare two dates that are constructed differently in Dart?  
*******************************************************************************************************************************************
64.  What does a class with a method named ._() mean in Dart/Flutter?  
*******************************************************************************************************************************************
65. Differentiate between named parameters and positional parameters in Dart?  
*******************************************************************************************************************************************
66. Explain any 4 method of List
*******************************************************************************************************************************************
*******************************************************************************************************************************************
*******************************************************************************************************************************************
